/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import model.Profile;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Sethu
 */
public class CreateJpanel1 extends javax.swing.JPanel {
    
    Profile profile;

    /**
     * Creates new form createJPanel
     */
    public CreateJpanel1(Profile profile) {
        initComponents();
        this.profile = profile;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        title = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblDob = new javax.swing.JLabel();
        lblStreet = new javax.swing.JLabel();
        lblPhoto = new javax.swing.JLabel();
        lblLinkedIn = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();
        lblZipcode = new javax.swing.JLabel();
        lblSsn = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblMedical = new javax.swing.JLabel();
        lblHealth = new javax.swing.JLabel();
        lblIpAddress = new javax.swing.JLabel();
        lblState = new javax.swing.JLabel();
        btnProfile = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        dateDob = new com.toedter.calendar.JDateChooser();
        imgProfile = new org.jdesktop.swingx.JXImageView();
        txtPhone = new javax.swing.JTextField();
        txtStreet = new javax.swing.JTextField();
        txtZipcode = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtSsn = new javax.swing.JTextField();
        txtHealth = new javax.swing.JTextField();
        txtMediical = new javax.swing.JTextField();
        txtLinkedIn = new javax.swing.JTextField();
        txtIpAddress = new javax.swing.JTextField();
        valDob = new javax.swing.JLabel();
        valName = new javax.swing.JLabel();
        valStreet = new javax.swing.JLabel();
        valState = new javax.swing.JLabel();
        valZip = new javax.swing.JLabel();
        valEmail = new javax.swing.JLabel();
        valPhone = new javax.swing.JLabel();
        valSsn = new javax.swing.JLabel();
        valHealth = new javax.swing.JLabel();
        valMedical = new javax.swing.JLabel();
        valLinkedin = new javax.swing.JLabel();
        valIPaddr = new javax.swing.JLabel();
        valPhoto = new javax.swing.JLabel();

        jPasswordField1.setText("jPasswordField1");

        title.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Create Profile");

        lblName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblName.setText("Name:");
        lblName.setAlignmentY(2.0F);

        lblDob.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDob.setText("Date of Birth:");
        lblDob.setAlignmentY(2.0F);

        lblStreet.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblStreet.setText("Street Address:");
        lblStreet.setAlignmentY(2.0F);

        lblPhoto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPhoto.setText("Profile Photo:");

        lblLinkedIn.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblLinkedIn.setText("Linkedin profile:");
        lblLinkedIn.setAlignmentY(2.0F);

        lblPhone.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPhone.setText("Phone No:");
        lblPhone.setAlignmentY(2.0F);

        lblZipcode.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblZipcode.setText("Zip Code:");
        lblZipcode.setAlignmentY(2.0F);

        lblSsn.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSsn.setText("SSN:");
        lblSsn.setAlignmentY(2.0F);

        lblEmail.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEmail.setText("Email ID:");
        lblEmail.setAlignmentY(2.0F);

        lblMedical.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMedical.setText("MRN:");
        lblMedical.setAlignmentY(2.0F);

        lblHealth.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHealth.setText("Health Plan ID:");
        lblHealth.setAlignmentY(2.0F);

        lblIpAddress.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblIpAddress.setText("IPAddress:");
        lblIpAddress.setAlignmentY(2.0F);

        lblState.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblState.setText("State:");
        lblState.setAlignmentY(2.0F);

        btnProfile.setText("upload");
        btnProfile.setToolTipText("");
        btnProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfileActionPerformed(evt);
            }
        });

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        dateDob.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dateDob.setAlignmentY(2.0F);
        dateDob.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dateDobFocusLost(evt);
            }
        });

        javax.swing.GroupLayout imgProfileLayout = new javax.swing.GroupLayout(imgProfile);
        imgProfile.setLayout(imgProfileLayout);
        imgProfileLayout.setHorizontalGroup(
            imgProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        imgProfileLayout.setVerticalGroup(
            imgProfileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        txtPhone.setAlignmentY(2.0F);
        txtPhone.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPhoneFocusLost(evt);
            }
        });

        txtStreet.setAlignmentY(2.0F);
        txtStreet.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtStreet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtStreetFocusLost(evt);
            }
        });
        txtStreet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStreetActionPerformed(evt);
            }
        });

        txtZipcode.setAlignmentY(2.0F);
        txtZipcode.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtZipcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtZipcodeFocusLost(evt);
            }
        });
        txtZipcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipcodeActionPerformed(evt);
            }
        });

        txtName.setAlignmentY(2.0F);
        txtName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameFocusLost(evt);
            }
        });
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtState.setAlignmentY(2.0F);
        txtState.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtState.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtStateFocusLost(evt);
            }
        });
        txtState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStateActionPerformed(evt);
            }
        });

        txtEmail.setAlignmentY(2.0F);
        txtEmail.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        txtSsn.setAlignmentY(2.0F);
        txtSsn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtSsn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSsnFocusLost(evt);
            }
        });
        txtSsn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSsnActionPerformed(evt);
            }
        });

        txtHealth.setAlignmentY(2.0F);
        txtHealth.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtHealth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHealthFocusLost(evt);
            }
        });
        txtHealth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHealthActionPerformed(evt);
            }
        });

        txtMediical.setAlignmentY(2.0F);
        txtMediical.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtMediical.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMediicalFocusLost(evt);
            }
        });
        txtMediical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMediicalActionPerformed(evt);
            }
        });

        txtLinkedIn.setAlignmentY(2.0F);
        txtLinkedIn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtLinkedIn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLinkedInFocusLost(evt);
            }
        });
        txtLinkedIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLinkedInActionPerformed(evt);
            }
        });

        txtIpAddress.setAlignmentY(2.0F);
        txtIpAddress.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtIpAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIpAddressFocusLost(evt);
            }
        });
        txtIpAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIpAddressActionPerformed(evt);
            }
        });

        valDob.setForeground(new java.awt.Color(255, 0, 0));

        valName.setForeground(new java.awt.Color(255, 0, 0));

        valStreet.setForeground(new java.awt.Color(255, 0, 0));

        valState.setForeground(new java.awt.Color(255, 0, 0));

        valZip.setForeground(new java.awt.Color(255, 0, 0));

        valEmail.setForeground(new java.awt.Color(255, 0, 0));

        valPhone.setForeground(new java.awt.Color(255, 0, 0));

        valSsn.setForeground(new java.awt.Color(255, 0, 0));

        valHealth.setForeground(new java.awt.Color(255, 0, 0));

        valMedical.setForeground(new java.awt.Color(255, 0, 0));

        valLinkedin.setForeground(new java.awt.Color(255, 0, 0));

        valIPaddr.setForeground(new java.awt.Color(255, 0, 0));

        valPhoto.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtStreet))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtZipcode)
                                    .addComponent(valStreet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(valZip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEmail))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSsn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSsn))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHealth)
                                    .addComponent(valSsn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblMedical, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMediical)
                                    .addComponent(valHealth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblLinkedIn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtLinkedIn)
                                    .addComponent(valMedical, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblIpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIpAddress)
                                    .addComponent(valLinkedin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(valIPaddr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDob, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateDob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtName)
                                    .addComponent(txtPhone)
                                    .addComponent(valDob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(valEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(valPhone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(valName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(valPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(imgProfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnProfile)
                                        .addGap(0, 43, Short.MAX_VALUE))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblState, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(valState, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtState))))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valName, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDob, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateDob, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(valDob, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStreet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStreet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(valStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblZipcode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtZipcode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valZip, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblState, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(valState, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(valPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSsn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSsn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHealth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(valSsn, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMedical, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(valHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMediical, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLinkedIn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(valMedical, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLinkedIn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIpAddress, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(valLinkedin, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(valIPaddr, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imgProfile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnProfile)
                                .addGap(41, 41, 41))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(saveBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblDob, lblName, lblPhone, lblPhoto, lblStreet});

    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        boolean isValidData = runFullValidation();
        if (isValidData) {
        // save the data to profile
        saveProfileInfo();
        JOptionPane.showMessageDialog(this, "Profile information is saved");
        } else {
        JOptionPane.showMessageDialog(this, "One or more errors have been found");
        }
        
        
    }//GEN-LAST:event_saveBtnActionPerformed

    private boolean runFullValidation() {
        // validate textfields
        // validate picture present
        validateName();
        validateDob();
        validateStreet();
        validateZipcode();
        validateState();
        validateEmailId();
        validatePhoneNumber();
        validateHealthPlanId();
        validateMedicalRecordNumber();
        validateIpAddress();
        validateLinkedIn();
        validateSSN();
        validatePicture();
        if (valName.getText().length() != 0 || valZip.getText().length()!= 0 || valZip.getText().length()!=0 || valHealth.getText().length()!= 0 || valMedical.getText().length() != 0|| valPhoto.getText().length() != 0 || valSsn.getText().length() != 0 || valPhone.getText().length()!=0||valIPaddr.getText().length()!=0 || valEmail.getText().length()!=0 || valDob.getText().length()!=0 || valStreet.getText().length() !=0 || valState.getText().length() !=0 || valLinkedin.getText().length()!=0) {
            return false;
        } else return true;
    };

    private void btnProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfileActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser  = new JFileChooser(); // creating new file picker
        chooser.addChoosableFileFilter(new ImageFilter()); // adding filter to display only supported image types
        chooser.setAcceptAllFileFilterUsed(false); // for disabling other type of files other than image
        chooser.showOpenDialog(null);
        try {
            File profilePhoto = chooser.getSelectedFile();
            imgProfile.setImage(profilePhoto);
            profile.setProfilePicture(imgProfile.getImage());
        } catch (IOException ex) {
            Logger.getLogger(CreateJpanel1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnProfileActionPerformed

    private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost
        // TODO add your handling code here:
        validateName();
    }//GEN-LAST:event_txtNameFocusLost

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtStreetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStreetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStreetActionPerformed

    private void txtZipcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipcodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipcodeActionPerformed

    private void txtStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStateActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtSsnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSsnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSsnActionPerformed

    private void txtHealthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHealthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHealthActionPerformed

    private void txtMediicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMediicalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMediicalActionPerformed

    private void txtLinkedInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLinkedInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLinkedInActionPerformed

    private void txtIpAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIpAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIpAddressActionPerformed

    private void dateDobFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateDobFocusLost
        // TODO add your handling code here:
        System.out.println("running validation");
//        validateDob();
    }//GEN-LAST:event_dateDobFocusLost

    private void txtZipcodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtZipcodeFocusLost
        // TODO add your handling code here:
        validateZipcode();
    }//GEN-LAST:event_txtZipcodeFocusLost

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        // TODO add your handling code here:
        validateEmailId();
    }//GEN-LAST:event_txtEmailFocusLost

    private void txtPhoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPhoneFocusLost
        // TODO add your handling code here:
        validatePhoneNumber();
    }//GEN-LAST:event_txtPhoneFocusLost

    private void txtSsnFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSsnFocusLost
        // TODO add your handling code here:
        validateSSN();
    }//GEN-LAST:event_txtSsnFocusLost

    private void txtHealthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHealthFocusLost
        // TODO add your handling code here:
        validateHealthPlanId();
    }//GEN-LAST:event_txtHealthFocusLost

    private void txtMediicalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMediicalFocusLost
        // TODO add your handling code here:
        validateMedicalRecordNumber();
    }//GEN-LAST:event_txtMediicalFocusLost

    private void txtLinkedInFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLinkedInFocusLost
        // TODO add your handling code here:
        validateLinkedIn();
    }//GEN-LAST:event_txtLinkedInFocusLost

    private void txtIpAddressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIpAddressFocusLost
        // TODO add your handling code here:
        validateIpAddress();
    }//GEN-LAST:event_txtIpAddressFocusLost

    private void txtStreetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStreetFocusLost
        // TODO add your handling code here:
        validateStreet();
    }//GEN-LAST:event_txtStreetFocusLost

    private void txtStateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStateFocusLost
        validateState();
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStateFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProfile;
    private com.toedter.calendar.JDateChooser dateDob;
    private org.jdesktop.swingx.JXImageView imgProfile;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JLabel lblDob;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblHealth;
    private javax.swing.JLabel lblIpAddress;
    private javax.swing.JLabel lblLinkedIn;
    private javax.swing.JLabel lblMedical;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblSsn;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblStreet;
    private javax.swing.JLabel lblZipcode;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel title;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHealth;
    private javax.swing.JTextField txtIpAddress;
    private javax.swing.JTextField txtLinkedIn;
    private javax.swing.JTextField txtMediical;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSsn;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtStreet;
    private javax.swing.JTextField txtZipcode;
    private javax.swing.JLabel valDob;
    private javax.swing.JLabel valEmail;
    private javax.swing.JLabel valHealth;
    private javax.swing.JLabel valIPaddr;
    private javax.swing.JLabel valLinkedin;
    private javax.swing.JLabel valMedical;
    private javax.swing.JLabel valName;
    private javax.swing.JLabel valPhone;
    private javax.swing.JLabel valPhoto;
    private javax.swing.JLabel valSsn;
    private javax.swing.JLabel valState;
    private javax.swing.JLabel valStreet;
    private javax.swing.JLabel valZip;
    // End of variables declaration//GEN-END:variables

    private void validateName() {
        String name = txtName.getText();
        if (name.length() <= 2) {
            valName.setText("Invalid Name, length <= 2");
        } else if (name.length() > 25) {
            valName.setText("Invalid Name, length > 25");
        } else {
            valName.setText("");
        }
    };

    private void validateDob() {
        System.out.println(dateDob.getDate());
        if (dateDob.getDate() == null){
            valDob.setText("Date field is empty");
        } else {
            valDob.setText("");
        }
    }
    
    private void validateStreet(){
        if (txtStreet.getText().length() == 0) {
            valStreet.setText("Street cannot be empty");
        } else {
            valStreet.setText("");
        }
    }
    
    private void validateState(){
        if (txtState.getText().length() == 0) {
            valState.setText("State cannot be empty");
        } else {
            valState.setText("");
        }
    }
    
    private void validateLinkedIn() {
        if (txtLinkedIn.getText().length() == 0){
            valLinkedin.setText("LinkedIn cannot be empty");
        } else {
            valLinkedin.setText("");
        }
    }

    private void validateZipcode() {
        String zipString = txtZipcode.getText();
        boolean isValidZip = true;
        
        for (int i = 0; i < zipString.length(); i++) {
            char c = zipString.charAt(i);
            if (!(c>='0' && c<='9')) {
                isValidZip = false;
            }
        }
        if (zipString.length()!= 5) {
            valZip.setText("Invalid zip code, Length should be 5");
        } else if (zipString.length()==5 && !isValidZip) {
            valZip.setText("Invalid zip code, No alphabets");
        } else {
            valZip.setText("");
        }
//        int zipCode = Integer.parseInt(zipString);
//        System.out.println(zipCode);
    };

    private void validateEmailId() {
        String emailId = txtEmail.getText();
        String regex = "^(.+)@(.+)$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(emailId);
        if (!matcher.matches()) {
         valEmail.setText("Invalid Email Id, Please check");
        } else {
            valEmail.setText("");
        }
    }

    private void validatePhoneNumber() { // self check no regex
        String phoneString = txtPhone.getText();
        boolean isValidPhone = true;
        
        for (int i = 0; i < phoneString.length(); i++) {
            char c = phoneString.charAt(i);
            if (i == 0 && c == '0') {
                isValidPhone = false;
            } else if (!(c>='0' && c<='9')) {
                isValidPhone = false;
            }
        }
        if (phoneString.length()!= 10) {
            valPhone.setText("Invalid Phone number, Length should be 10");
        } else if (phoneString.length()==10 && !isValidPhone) {
            valPhone.setText("Invalid phone number");
        } else {
            valPhone.setText("");
        }
    }

    private void validateSSN() {
        String ssnString = txtSsn.getText();
        boolean isValidSsn = true;
        
        for (int i = 0; i < ssnString.length(); i++) {
            char c = ssnString.charAt(i);
            if (!(c>='0' && c<='9')) {
                isValidSsn = false;
            }
        }
        if (ssnString.length()!= 9) {
            valSsn.setText("Invalid SSN, Length should be 9");
        } else if (ssnString.length()==9 && !isValidSsn) {
            valSsn.setText("Invalid Social Security number, no alphabets");
        } else {
            valSsn.setText("");
        }
    }

    private void validateHealthPlanId() {
        String healthString = txtHealth.getText();
        boolean isValidHealth = true;
        
        for (int i = 0; i < healthString.length(); i++) {
            char c = healthString.charAt(i);
             if (!(c>='0' && c<='9')) {
                isValidHealth = false;
            }
        }
        if (healthString.length()!= 10) {
            valHealth.setText("Invalid health id, Length should be 10");
        } else if (healthString.length()==10 && !isValidHealth) {
            valHealth.setText("Invalid health id, No alphabets");
        } else {
            valHealth.setText("");
        }
    }

    private void validateMedicalRecordNumber() {
        String mrnString = txtMediical.getText();
        boolean isValidMrn = true;
        
        for (int i = 0; i < mrnString.length(); i++) {
            char c = mrnString.charAt(i);
             if (!(c>='0' && c<='9')) {
                isValidMrn = false;
            }
        }
        if (mrnString.length()!= 7) {
            valMedical.setText("Invalid MRN, length should be 7");
        } else if (mrnString.length()==7 && !isValidMrn) {
            valMedical.setText("Invalid MRN, No alphabets");
        } else {
            valMedical.setText("");
        }
    }

    private void validateIpAddress() {
        String ipAddress = txtIpAddress.getText();
        String regex = "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(ipAddress);
        if (!matcher.matches()) {
            valIPaddr.setText("Invalid IP Address, 255.255.255.255 is valid");
        } else {
            valIPaddr.setText("");
        }
        
    }
    
    private void validatePicture() {
        // check if the image is present in the 
        System.out.println(profile.getProfilePicture());
        if (profile.getProfilePicture() == null) {
            valPhoto.setText("Image not found");
        } else {
            valPhoto.setText("");
        }
        
    }

    private void saveProfileInfo() {
        profile.setName(txtName.getText());
        profile.setDob(dateDob.getDate());
        profile.setStreet(txtStreet.getText());
        profile.setZipCode(Integer.parseInt(txtZipcode.getText()));
        profile.setEmailId(txtEmail.getText());
        profile.setState(txtState.getText());
        profile.setPhone(Long.parseLong(txtPhone.getText()));
        profile.setSsn(Long.parseLong(txtSsn.getText()));
        profile.setHealthId(Long.parseLong(txtHealth.getText()));
        profile.setMedicalRecordNumber(Long.parseLong(txtMediical.getText()));
        profile.setLinkedIn(txtLinkedIn.getText());
        profile.setIpAddress(txtIpAddress.getText());
       
        System.out.println(profile);
    }

}

// Define a filter for the image types
class ImageFilter extends FileFilter {
   public final static String JPEG = "jpeg";
   public final static String JPG = "jpg";
   public final static String GIF = "gif";
   public final static String TIFF = "tiff";
   public final static String TIF = "tif";
   public final static String PNG = "png";
   
   @Override
   public boolean accept(File f) {
      if (f.isDirectory()) {
         return true;
      }

      String extension = getExtension(f);
      if (extension != null) {
         if (extension.equals(TIFF) ||
            extension.equals(TIF) ||
            extension.equals(GIF) ||
            extension.equals(JPEG) ||
            extension.equals(JPG) ||
            extension.equals(PNG)) {
            return true;
         } else {
            return false;
         }
      }
      return false;
   }

   @Override
   public String getDescription() {
      return "Image Only";
   }

   String getExtension(File f) {
      String ext = null;
      String s = f.getName();
      int i = s.lastIndexOf('.');
   
      if (i > 0 &&  i < s.length() - 1) {
         ext = s.substring(i+1).toLowerCase();
      }
      return ext;
   } 
}
