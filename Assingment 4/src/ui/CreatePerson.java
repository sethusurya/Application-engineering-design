/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.City;
import model.Community;
import model.EncounterHistory;
import model.House;
import model.Person;
import model.PersonsList;

/**
 *
 * @author sethu
 */
public class CreatePerson extends javax.swing.JPanel {

    public JPanel rightPanel;
    public City city;
    public PersonsList personsList;
    /**
     * Creates new form CreatePerson
     */
    public CreatePerson(JPanel rightPanel, City city,PersonsList personsList) {
        initComponents();
        this.rightPanel = rightPanel;
        this.city = city;
        this.personsList = personsList;
        
        populateSelect();
        
        selHouse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[0]));
//        selHouse.enableInputMethods(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtSex = new javax.swing.JTextField();
        lblSex = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        selCommunity = new javax.swing.JComboBox<>();
        lblHouse = new javax.swing.JLabel();
        selHouse = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtPatientId = new javax.swing.JTextField();
        lblPatientId = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitle.setFont(new java.awt.Font("Kristen ITC", 3, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Create Person");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 42));

        lblName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblName.setText("Name : ");
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 89, 101, 32));
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 87, 252, 37));
        add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 130, 252, 37));

        lblAge.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAge.setText("Age : ");
        add(lblAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 130, 101, 32));
        add(txtSex, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 173, 252, 37));

        lblSex.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSex.setText("Sex : ");
        add(lblSex, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 175, 101, 32));

        lblCommunity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCommunity.setText("Community : ");
        add(lblCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 263, 101, 32));

        selCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selCommunity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selCommunityItemStateChanged(evt);
            }
        });
        add(selCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 259, 252, 40));

        lblHouse.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHouse.setText("House : ");
        add(lblHouse, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 309, 101, 32));

        selHouse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        selHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selHouseActionPerformed(evt);
            }
        });
        add(selHouse, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 305, 252, 40));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(438, 394, -1, -1));

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 394, -1, -1));
        add(txtPatientId, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 216, 252, 37));

        lblPatientId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPatientId.setText("Medical ID : ");
        add(lblPatientId, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 218, 101, 32));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        goBack();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void selHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selHouseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selHouseActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        // take the input values and save it to db
        String newName = txtName.getText();
        int newAge = Integer.parseInt(txtAge.getText());
        String newSex = txtSex.getText();
        String newPatientId = txtPatientId.getText();
        
        for(Person p:personsList.getPersonsList()){
            if (p.getPatientId().equals(newPatientId)) {
                JOptionPane.showMessageDialog(this, "PatientId is already exists, Please assign new One");
                return;
            }
        }
        String newCommunityName = selCommunity.getSelectedItem().toString();
        String newHouseAddr = selHouse.getSelectedItem().toString();
        
        String[] newHouseArr = newHouseAddr.split(",");
        Community newCommunity = new Community();
        House newHouse = new House();
        for(Community c: city.getCommunities()){
            if (c.getName() == newCommunityName) {
                newCommunity = c;
                break;
            }
        }
        if(newHouseArr.length > 0 && newCommunity.getHousesList().size() > 0) { // houses list is not empty and newHouse is proper string
            int newHouseNumber = Integer.parseInt(newHouseArr[0]);
            String newStreetName = newHouseArr[1];
            
            for(House h: newCommunity.getHousesList()){
                if (h.getHouseNumber() == newHouseNumber && h.getStreetName().equals(newStreetName)) {
                    newHouse = h;
                    break;
                }
            }   
        }
        
        EncounterHistory NewEncounterHistory = new EncounterHistory();
        
        Person newPerson = new Person();
        newPerson.setName(newName);
        newPerson.setAge(newAge);
        newPerson.setSex(newSex);
        newPerson.setPatientId(newPatientId);
        newPerson.setHouse(newHouse);
        newPerson.setEncounterHistory(NewEncounterHistory);
        personsList.add(newPerson);
        
        goBack();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void selCommunityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selCommunityItemStateChanged
        // TODO add your handling code here:
        String selectedCommunityName = selCommunity.getSelectedItem().toString();
        if (selectedCommunityName == ""){
            // do nothing
           selHouse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[0])); // clearing house selections
        } else {
            Community selectedCommunity = new Community();
            for (Community c: city.getCommunities()){
                if (c.getName() ==  selectedCommunityName) {
                    selectedCommunity = c;
                    break;
                }
            };
            populateHouses(selectedCommunity);
        }
    }//GEN-LAST:event_selCommunityItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblHouse;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPatientId;
    private javax.swing.JLabel lblSex;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JComboBox<String> selCommunity;
    private javax.swing.JComboBox<String> selHouse;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtSex;
    // End of variables declaration//GEN-END:variables

    private void populateSelect() {
        ArrayList<String> myCommunityList = new ArrayList<String>();
        myCommunityList.add("");
        
        for(Community c : city.getCommunities()) {
            // check if it is already present in the list before trying to add it to list
            if (!myCommunityList.contains(c.getName()))myCommunityList.add(c.getName());
        }
        
        // convert arraylist to array
        String[] myCommunities = myCommunityList.toArray(new String[0]);
        
        // populating the menus
        selCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(myCommunities));
    }

    private void populateHouses(Community selectedCommunity) {
        ArrayList<String> myHousesList = new ArrayList<String>();
        myHousesList.add("");
        
        for(House h:selectedCommunity.getHousesList()) {
            // check if it is already present in the list before trying to add it to list
            if (!myHousesList.contains(h.getHouseAddress()))myHousesList.add(h.getHouseAddress());
        }
        
        // convert arraylist to array
        String[] myHouses = myHousesList.toArray(new String[0]);
        
        // populating the menus
        selHouse.setModel(new javax.swing.DefaultComboBoxModel<>(myHouses));
    }

    private void goBack() {
        rightPanel.remove(this);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.previous(rightPanel);
    }
    
    
}
