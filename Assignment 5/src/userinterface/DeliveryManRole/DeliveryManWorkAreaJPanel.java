/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DeliveryManRole;

import Business.EcoSystem;
import Business.Order.Order;
import Business.Order.OrderDirectory;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class DeliveryManWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public DeliveryManWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
      
        
        populateTable(business.getOrderDirectory(), userAccount);
    }
    
    public void populateTable(OrderDirectory orderDirectory, UserAccount account){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        for(Order o: orderDirectory.getOrderDirectory()){
            if (o.getDeliveryManName() != null && o.getDeliveryManName().equals(account.getUsername())) {
                Object[] row = new Object[5];
                row[0] = o;
                row[1] = o.getCustomerName();
                row[2] = o.getStatus();
                row[3] = o.getOrderTime();
                row[4] = o.getDeliveryTime();
                
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MY ASSIGNED DELIVERIES");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 40));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Restaurant Name", "Customer Name", "Status", "Order Date", "Delivery Date"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 800, 460));

        jButton1.setForeground(new java.awt.Color(0, 102, 0));
        jButton1.setText("‚úîÔ∏è Mark Delivered");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 620, -1, -1));

        jButton2.setForeground(new java.awt.Color(102, 102, 0));
        jButton2.setText("üöö Mark Out For Delivery");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 620, -1, -1));

        jButton3.setForeground(new java.awt.Color(0, 51, 153));
        jButton3.setText("üîÉ Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 90, 120, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selectedRowIndex = jTable1.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this,"Select an order to Proceed");
            return;
        } else {
            // do something with selected order
            Order selectedOrder =(Order) jTable1.getValueAt(selectedRowIndex, 0);
            Order myNewOrder = selectedOrder;
            myNewOrder.setStatus("Out for Delivery");
            int index = -1;
            for (int i = 0; i < business.getOrderDirectory().getOrderDirectory().size(); i++) {
                Order tempOrder = business.getOrderDirectory().getOrderDirectory().get(i);
                Order tempOrder2 = selectedOrder;
                if (tempOrder2.getCustomerName().equals(tempOrder.getCustomerName()) && tempOrder2.getOrderTime().equals(tempOrder.getOrderTime())) {
                    index = i;
                }
            }
            if (index < 0) {
                JOptionPane.showMessageDialog(this, "Unable to Update Order");
                return;
            } else {
                business.getOrderDirectory().modifyOrder(index, myNewOrder); // Modify Order
//                goBack();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selectedRowIndex = jTable1.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this,"Select an order to Proceed");
            return;
        } else {
            // do something with selected order
            Order selectedOrder =(Order) jTable1.getValueAt(selectedRowIndex, 0);
            Order myNewOrder = selectedOrder;
            myNewOrder.setStatus("Completed");
            myNewOrder.setDeliveryTime(new Date());
            int index = -1;
            for (int i = 0; i < business.getOrderDirectory().getOrderDirectory().size(); i++) {
                Order tempOrder = business.getOrderDirectory().getOrderDirectory().get(i);
                Order tempOrder2 = selectedOrder;
                if (tempOrder2.getCustomerName().equals(tempOrder.getCustomerName()) && tempOrder2.getOrderTime().equals(tempOrder.getOrderTime())) {
                    index = i;
                }
            }
            if (index < 0) {
                JOptionPane.showMessageDialog(this, "Unable to Update Order");
                return;
            } else {
                business.getOrderDirectory().modifyOrder(index, myNewOrder); // Modify Order
//                goBack();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        populateTable(business.getOrderDirectory(), userAccount);
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
}
